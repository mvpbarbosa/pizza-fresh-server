var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.425]],["body/controllers/AppController.html",[0,1.601,1,3.011,2,1.13,3,0.254,4,0.229,5,0.229,6,2.658,7,0.453,8,1.509,9,3.766,10,3.121,11,5.214,12,1.13,13,0.022,14,1.944,15,3.011,16,5.361,17,4.169,18,6.121,19,0.554,20,3.121,21,4.421,22,3.766,23,4.421,24,3.011,25,3.766,26,2.754,27,6.121,28,3.693,29,2.356,30,4.421,31,4.421,32,1.005,33,0.752,34,0.453,35,0.797,36,1.13,37,5.584,38,4.373,39,1.509,40,1.345,41,3.766,42,0.598,43,0.667,44,2.539,45,1.792,46,0.948,47,2.949,48,2.658,49,3.121,50,0.254,51,0.076,52,1.276,53,1.2,54,1.944,55,1.792,56,3.121,57,1.549,58,2.658,59,3.121,60,3.121,61,1.066,62,3.121,63,0.014,64,0.014]],["title/modules/AppModule.html",[65,1.216,66,2.425]],["body/modules/AppModule.html",[1,3.619,2,1.674,3,0.271,4,0.244,5,0.244,13,0.023,42,0.711,43,0.711,47,3.588,48,2.832,50,0.271,51,0.081,63,0.014,64,0.014,65,1.578,66,4.819,67,1.447,68,2.011,69,2.832,70,2.832,71,2.832,72,3.89,73,3.89,74,2.718,75,3.89,76,3.89,77,3.89,78,2.295,79,1.651,80,1.651,81,3.325,82,2.463,83,2.655,84,3.325,85,3.325,86,3.325,87,3.325,88,3.325,89,3.325,90,3.325]],["title/injectables/AppService.html",[47,2.045,91,1.021]],["body/injectables/AppService.html",[3,0.355,4,0.32,5,0.32,7,0.633,8,1.889,9,4.711,13,0.022,16,4.711,19,0.773,32,1.403,33,1.049,34,0.633,35,1.112,39,1.487,40,1.59,41,4.711,42,0.466,43,0.931,47,3.177,50,0.355,51,0.106,58,4.711,61,1.487,63,0.017,64,0.017,91,1.587,92,2.022,93,3.71,94,5.532,95,4.356,96,3.71,97,4.356,98,4.356]],["title/controllers/AuthController.html",[0,1.29,99,2.425]],["body/controllers/AuthController.html",[0,1.111,2,1.111,3,0.25,4,0.225,5,0.225,7,0.445,8,1.491,12,1.581,13,0.023,19,0.775,25,3.719,26,2.72,28,2.508,32,1.406,33,1.052,34,0.634,35,1.115,39,1.491,42,0.686,43,0.656,44,2.921,45,1.762,46,0.932,50,0.25,51,0.075,52,1.254,53,1.179,55,2.508,61,1.491,63,0.014,64,0.014,99,2.974,100,2.612,101,1.91,102,3.067,103,3.774,104,4.367,105,2.612,106,3.791,107,3.067,108,4.367,109,4.367,110,3.293,111,4.367,112,3.067,113,2.508,114,3.067,115,2.318,116,3.067,117,2.327,118,2.508,119,3.293,120,3.067,121,3.067,122,1.91,123,2.089,124,2.089,125,2.72,126,1.91,127,1.91,128,1.179,129,2.72,130,2.612,131,2.921,132,2.612,133,1.91,134,2.612,135,2.612,136,2.612,137,2.089,138,3.067,139,2.612,140,3.067,141,3.067,142,3.067,143,3.067,144,3.067,145,1.91,146,3.067,147,3.067]],["title/modules/AuthModule.html",[65,1.216,72,2.218]],["body/modules/AuthModule.html",[2,1.778,3,0.296,4,0.266,5,0.266,13,0.023,42,0.702,43,0.776,50,0.296,51,0.088,63,0.015,64,0.015,65,1.676,67,1.58,68,2.136,72,4.257,74,2.791,78,2.437,79,1.802,80,1.802,82,2.615,83,2.819,99,3.788,128,1.396,131,3.685,132,3.092,148,3.092,149,3.63,150,3.092,151,3.996,152,3.63,153,3.63,154,2.261,155,3.63,156,2.737,157,2.261,158,3.63,159,2.261,160,2.261,161,1.802,162,3.63,163,3.63,164,3.092,165,3.63,166,3.63,167,3.63]],["title/injectables/AuthService.html",[91,1.021,131,2.045]],["body/injectables/AuthService.html",[3,0.246,4,0.221,5,0.221,7,0.438,8,1.473,13,0.023,19,0.766,24,2.054,32,1.389,33,1.039,34,0.627,35,1.102,39,1.029,42,0.648,43,0.645,50,0.246,51,0.073,53,1.659,57,2.501,61,1.029,63,0.013,64,0.013,91,1.237,92,1.4,103,2.938,105,3.674,106,3.769,110,2.274,113,2.478,115,1.991,117,2.298,131,2.478,133,1.878,134,2.568,135,2.568,136,2.568,156,2.274,168,2.568,169,2.684,170,2.478,171,1.732,172,2.247,173,6.231,174,3.015,175,2.142,176,3.015,177,2.568,178,3.253,179,1.732,180,3.674,181,2.929,182,1.732,183,3.015,184,3.015,185,4.314,186,2.568,187,3.015,188,2.298,189,2.274,190,2.687,191,2.298,192,4.314,193,4.314,194,3.798,195,4.314,196,3.015,197,3.015,198,3.015,199,4.314,200,3.015,201,3.253,202,1.4,203,3.015]],["title/classes/CreateOrderDto.html",[51,0.087,204,2.218]],["body/classes/CreateOrderDto.html",[3,0.274,4,0.247,5,0.247,7,0.489,12,1.688,13,0.022,17,3.175,19,0.828,29,2.484,34,0.911,36,1.688,42,0.618,46,1.023,50,0.274,51,0.13,63,0.014,64,0.014,117,2.484,204,2.904,205,1.084,206,4.033,207,2.868,208,1.592,209,3.331,210,5.348,211,4.129,212,3.367,213,3.367,214,4.663,215,3.175,216,3.175,217,4.663,218,4.663,219,3.971,220,5.773,221,4.663,222,4.353,223,3.367,224,3.367,225,2.315,226,2.868,227,3.971,228,3.516,229,3.971,230,4.663,231,2.484,232,3.175,233,3.367,234,2.85,235,2.868,236,3.971,237,3.516,238,2.868,239,4.663,240,1.794,241,1.219,242,1.934,243,2.293,244,3.367,245,2.539]],["title/classes/CreateOrderProductDto.html",[51,0.087,211,2.425]],["body/classes/CreateOrderProductDto.html",[3,0.279,4,0.251,5,0.251,7,0.497,12,1.953,13,0.022,19,0.957,28,2.707,34,0.783,36,2.282,40,1.4,42,0.505,46,1.04,50,0.279,51,0.115,63,0.015,64,0.015,205,1.102,206,4.383,208,1.609,211,3.211,222,3.554,225,2.34,226,2.914,231,3.357,232,3.211,234,3.097,236,4.015,237,3.554,238,4.015,240,1.823,242,3.338,246,2.33,247,4.594,248,4.594,249,2.579,250,4.714,251,4.383,252,4.714,253,4.714,254,3.421,255,3.421,256,1.707,257,4.714,258,4.714,259,4.714,260,4.714,261,4.714,262,2.914,263,4.714,264,4.714,265,2.914,266,3.211]],["title/classes/CreateProductDto.html",[51,0.087,267,2.045]],["body/classes/CreateProductDto.html",[3,0.252,4,0.227,5,0.227,7,0.449,12,2.014,13,0.022,19,0.987,24,2.993,28,2.524,29,2.341,33,1.231,34,0.808,36,2.274,40,1.47,42,0.471,46,0.94,50,0.252,51,0.107,63,0.014,64,0.014,205,0.996,208,1.5,225,2.181,231,3.418,234,3.13,240,1.648,246,2.107,249,3.313,251,4.838,262,2.635,265,2.635,266,3.48,267,2.524,268,5.004,269,2.722,270,3.48,271,4.394,272,3.742,273,4.738,274,4.738,275,3.742,276,3.742,277,3.742,278,3.742,279,3.742,280,2.635,281,3.742,282,3.742,283,3.094,284,3.742,285,3.742,286,3.094,287,3.094,288,4.394,289,3.742,290,3.094,291,3.742,292,3.742,293,3.094,294,2.635]],["title/classes/CreateTableDto.html",[51,0.087,295,2.045]],["body/classes/CreateTableDto.html",[3,0.353,4,0.318,5,0.318,7,0.63,12,1.571,13,0.022,17,3.758,19,0.77,34,0.63,36,1.571,42,0.591,46,1.318,50,0.353,51,0.134,63,0.017,64,0.017,117,2.94,205,1.397,208,1.884,225,3.273,227,4.699,228,4.16,231,2.94,232,3.758,234,2.94,237,4.16,240,2.311,291,4.699,295,3.169,296,4.699,297,3.271,298,4.338,299,4.338]],["title/classes/CreateUserDto.html",[51,0.087,300,2.045]],["body/classes/CreateUserDto.html",[3,0.218,4,0.197,5,0.197,7,0.39,12,2.01,13,0.022,17,2.698,19,0.985,28,2.989,33,1.135,34,0.806,36,2.01,40,1.544,42,0.424,46,0.815,50,0.218,51,0.096,63,0.012,64,0.012,103,3.544,118,3.544,181,2.51,182,2.706,194,4.653,205,0.864,208,1.353,231,3.414,234,3.096,240,1.429,249,2.987,266,3.544,269,2.51,280,2.284,281,3.374,284,4.432,292,3.374,300,2.275,301,4.949,302,2.022,303,4.711,304,2.682,305,3.962,306,5.204,307,5.204,308,3.962,309,3.924,310,2.682,311,3.962,312,3.374,313,2.682,314,3.962,315,5.204,316,3.962,317,3.374,318,3.374,319,2.682,320,3.962,321,3.962,322,2.987,323,2.682,324,2.682,325,3.962,326,3.962,327,3.962,328,3.962,329,2.682,330,2.682,331,3.962,332,2.682,333,2.682,334,2.682,335,2.682,336,2.682]],["title/injectables/JwtStrategy.html",[91,1.021,151,2.218]],["body/injectables/JwtStrategy.html",[3,0.28,4,0.252,5,0.252,7,0.498,8,1.613,13,0.023,19,0.839,32,1.521,33,1.138,34,0.845,35,1.207,39,1.172,40,0.827,42,0.623,43,0.734,50,0.28,51,0.083,52,1.403,53,1.32,57,1.704,61,1.172,63,0.015,64,0.015,91,1.355,92,1.593,115,1.956,118,1.971,119,2.588,128,1.32,151,2.942,161,1.704,164,2.923,169,2.878,170,1.971,171,1.971,172,2.379,175,2.345,177,4.024,179,1.971,181,2.517,186,2.923,188,1.828,189,2.588,190,2.137,191,1.828,201,2.588,202,1.593,229,2.923,337,2.923,338,4.724,339,3.432,340,4.724,341,4.724,342,3.432,343,3.432,344,3.432,345,3.432,346,3.432,347,3.432,348,2.923,349,2.137,350,3.432,351,3.432,352,3.432,353,3.432,354,3.432,355,2.923,356,3.432,357,3.432,358,3.218,359,3.432]],["title/classes/LoginDto.html",[51,0.087,106,2.218]],["body/classes/LoginDto.html",[3,0.328,4,0.296,5,0.296,7,0.585,12,1.905,13,0.022,19,0.934,34,0.764,36,1.905,40,1.496,42,0.563,46,1.224,50,0.328,51,0.128,63,0.016,64,0.016,106,3.276,118,3.566,181,3.432,182,3.364,194,3.966,205,1.297,208,1.796,231,3.308,234,3.12,240,2.146,266,3.989,309,3.966,322,3.966,360,3.43,361,5.259,362,4.027,363,4.027,364,5.857]],["title/classes/LoginResponseDto.html",[51,0.087,133,2.218]],["body/classes/LoginResponseDto.html",[3,0.329,4,0.297,5,0.297,7,0.587,12,1.909,13,0.022,19,0.936,34,0.766,36,1.909,40,1.27,42,0.565,46,1.228,50,0.329,51,0.098,63,0.016,64,0.016,103,3.591,110,4.424,115,2.395,118,3.028,119,3.976,133,3.284,161,2.617,205,1.302,208,1.8,231,2.809,234,3.126,365,4.997,366,3.443,367,5.272,368,5.272,369,3.591,370,5.272,371,4.042,372,5.272,373,4.042,374,2.518]],["title/classes/Order.html",[51,0.087,242,2.045]],["body/classes/Order.html",[3,0.315,4,0.284,5,0.284,7,0.562,13,0.022,19,1.16,34,0.949,35,1.792,40,1.233,42,0.414,50,0.315,51,0.094,63,0.016,64,0.016,115,2.366,205,1.245,208,1.748,209,3.576,242,2.941,256,2.079,374,2.408,375,3.293,376,3.576,377,3.243,378,3.576,379,4.163,380,3.867,381,3.867,382,2.85,383,3.867,384,3.867,385,3.867,386,3.867]],["title/controllers/OrderController.html",[0,1.29,387,2.425]],["body/controllers/OrderController.html",[0,1.059,2,1.059,3,0.238,4,0.215,5,0.215,7,0.425,8,1.441,12,1.793,13,0.023,14,1.821,15,2.874,19,0.879,26,3.377,32,1.359,33,1.017,34,0.613,35,1.078,39,1.69,40,1.193,42,0.661,43,0.625,44,3.114,45,1.68,46,0.889,50,0.238,51,0.071,52,1.195,53,1.124,54,1.821,55,2.844,61,1.69,63,0.013,64,0.013,101,1.821,115,2.169,122,2.628,125,2.628,126,1.821,127,1.821,128,1.124,129,2.628,130,2.491,137,1.992,139,2.491,145,1.821,204,3.937,215,2.874,216,2.874,222,4.088,241,1.528,242,1.68,256,1.963,369,2.874,387,2.874,388,2.491,389,2.691,390,2.095,391,2.925,392,1.992,393,2.874,394,2.925,395,2.874,396,4.22,397,2.925,398,1.452,399,1.992,400,2.925,401,2.205,402,1.452,403,2.491,404,2.844,405,2.491,406,2.925,407,2.925,408,2.925,409,2.925,410,2.925,411,1.992,412,1.992,413,2.925]],["title/modules/OrderModule.html",[65,1.216,73,2.218]],["body/modules/OrderModule.html",[2,1.905,3,0.328,4,0.296,5,0.296,13,0.022,42,0.69,43,0.861,50,0.328,51,0.098,63,0.016,64,0.016,65,1.796,67,1.752,68,2.288,73,4.251,74,2.875,78,2.611,79,1.999,80,1.999,82,2.802,83,3.021,128,1.548,154,2.508,157,2.508,159,2.508,160,2.508,161,1.999,387,3.989,404,3.795,405,3.43,414,3.43,415,3.43,416,4.027,417,4.027,418,4.027]],["title/injectables/OrderService.html",[91,1.021,404,2.045]],["body/injectables/OrderService.html",[3,0.187,4,0.169,5,0.169,7,0.333,8,1.203,13,0.023,19,0.854,32,1.381,33,1.418,34,0.623,35,1.095,36,1.553,39,1.464,40,1.319,42,0.556,43,0.491,50,0.187,51,0.056,52,0.938,53,0.883,57,1.14,61,1.464,63,0.011,64,0.011,91,1.011,92,1.066,115,1.742,170,1.319,171,1.319,172,1.966,175,2.129,179,1.319,204,3.552,209,2.996,225,2.388,241,1.553,245,5.033,247,1.955,248,3.002,256,1.984,269,1.223,270,1.564,374,1.43,377,2.388,382,1.75,389,2.388,390,1.75,398,1.75,402,1.14,403,1.955,404,2.024,419,1.955,420,2.296,421,3.524,422,2.296,423,3.524,424,2.296,425,2.296,426,1.319,427,1.319,428,1.564,429,2.921,430,2.296,431,3.524,432,2.296,433,2.296,434,2.296,435,2.296,436,2.296,437,2.296,438,2.296,439,5.484,440,1.564,441,2.296,442,2.296,443,2.296,444,2.296]],["title/modules/PrismaModule.html",[65,1.216,74,1.549]],["body/modules/PrismaModule.html",[3,0.359,4,0.324,5,0.324,13,0.022,42,0.597,43,0.943,50,0.359,51,0.107,63,0.017,64,0.017,65,1.903,67,1.919,68,2.426,74,2.99,78,2.768,79,2.189,80,2.189,82,2.97,172,2.922,445,3.756,446,3.756,447,3.756,448,4.41,449,5.575,450,4.41]],["title/injectables/PrismaService.html",[91,1.021,172,1.455]],["body/injectables/PrismaService.html",[3,0.326,4,0.293,5,0.293,7,0.58,8,1.787,13,0.022,19,0.929,32,1.287,33,0.963,34,0.58,35,1.021,39,1.787,42,0.56,43,0.855,50,0.326,51,0.097,63,0.016,64,0.016,91,1.501,92,1.855,169,3.579,172,2.139,188,2.788,349,3.26,374,2.489,451,3.404,452,4.97,453,5.234,454,6.594,455,5.234,456,6.191,457,3.997,458,3.404,459,3.997,460,3.997,461,3.997,462,3.997,463,3.997]],["title/classes/Product.html",[51,0.087,382,1.768]],["body/classes/Product.html",[3,0.32,4,0.288,5,0.288,7,0.57,13,0.022,19,1.187,33,1.393,34,0.971,35,1.675,36,2.094,40,1.635,50,0.32,51,0.095,63,0.016,64,0.016,205,1.264,208,1.765,225,2.567,256,2.094,269,3.081,270,3.938,376,3.602,378,3.602,379,4.186,382,2.567,464,3.342,465,3.924,466,3.924,467,3.924,468,3.924,469,3.924,470,3.924,471,3.924]],["title/controllers/ProductController.html",[0,1.29,472,2.425]],["body/controllers/ProductController.html",[0,0.873,2,0.873,3,0.196,4,0.177,5,0.177,7,0.35,8,1.248,12,1.921,13,0.022,14,1.501,15,2.491,19,0.941,26,3.722,32,1.589,33,1.188,34,0.716,35,1.26,39,1.811,40,1.474,42,0.598,43,0.515,44,3.206,45,1.384,46,0.732,50,0.196,51,0.059,52,0.985,53,0.927,54,1.501,55,3.046,61,1.811,63,0.011,64,0.011,101,1.501,122,2.278,123,1.641,124,1.641,125,2.278,126,1.501,127,1.501,128,0.927,129,2.278,145,1.501,202,2.051,215,2.491,216,2.491,219,3.115,241,1.324,243,2.491,251,4.506,256,2.328,267,3.206,369,3.802,382,1.196,389,2.449,390,1.815,392,1.641,393,2.491,395,2.491,398,1.196,399,1.641,402,1.196,411,1.641,412,1.641,472,2.491,473,2.052,474,1.948,475,2.41,476,2.41,477,1.384,478,1.817,479,2.757,480,2.41,481,2.41,482,2.41,483,1.384,484,3.722,485,1.817,486,2.757,487,2.41,488,1.817,489,2.538,490,2.052,491,1.384,492,2.41,493,2.41,494,1.817,495,2.41,496,2.41,497,2.41,498,1.817,499,1.817,500,2.41,501,1.817,502,1.817,503,1.817,504,2.41]],["title/modules/ProductModule.html",[65,1.216,75,2.218]],["body/modules/ProductModule.html",[2,1.905,3,0.328,4,0.296,5,0.296,13,0.022,42,0.69,43,0.861,50,0.328,51,0.098,63,0.016,64,0.016,65,1.796,67,1.752,68,2.288,74,2.875,75,4.251,78,2.611,79,1.999,80,1.999,82,2.802,83,3.021,128,1.548,154,2.508,157,2.508,159,2.508,160,2.508,161,1.999,472,3.989,489,3.795,490,3.43,505,3.43,506,4.027,507,3.43,508,4.027,509,4.027]],["title/injectables/ProductService.html",[91,1.021,489,2.045]],["body/injectables/ProductService.html",[3,0.193,4,0.174,5,0.174,7,0.345,8,1.234,13,0.023,19,1.024,29,1.264,32,1.787,33,1.337,34,0.806,35,1.417,39,1.894,40,1.543,42,0.594,43,0.507,50,0.193,51,0.058,52,0.97,53,0.912,57,2.173,61,1.798,63,0.011,64,0.011,91,1.036,92,1.101,113,3.569,117,1.264,169,3.413,170,1.362,171,1.362,172,2,175,1.794,179,1.362,188,2.607,190,1.478,191,1.264,202,1.677,241,1.309,243,2.461,256,2.206,267,2.811,358,1.616,382,1.794,389,2.429,390,1.794,398,1.794,402,1.178,426,1.362,427,1.362,428,1.616,429,3.333,440,1.616,474,1.925,477,2.075,483,2.075,484,3.048,489,2.075,491,1.362,510,2.021,511,2.725,512,2.372,513,2.461,514,2.372,515,3.779,516,2.372,517,2.372,518,2.725,519,2.372,520,2.372,521,2.372,522,1.789,523,2.372,524,2.372,525,3.3,526,2.372,527,1.789,528,1.789,529,3.3,530,2.372,531,1.789,532,2.372,533,2.372]],["title/classes/Table.html",[51,0.087,377,1.768]],["body/classes/Table.html",[3,0.355,4,0.32,5,0.32,7,0.633,13,0.022,19,1.135,34,0.929,35,1.723,40,1.332,50,0.355,51,0.106,63,0.017,64,0.017,205,1.403,208,1.889,225,3.277,256,2.201,376,3.786,377,2.746,378,3.786,379,4.356,534,3.71,535,4.356,536,4.356,537,4.356,538,4.356]],["title/controllers/TableController.html",[0,1.29,539,2.425]],["body/controllers/TableController.html",[0,0.859,2,0.859,3,0.193,4,0.174,5,0.174,7,0.345,8,1.234,12,1.907,13,0.023,14,1.478,15,2.461,19,0.935,22,5.065,32,1.576,33,1.179,34,0.711,35,1.25,39,1.798,40,1.468,42,0.618,43,0.507,44,3.187,45,1.362,46,0.721,50,0.193,51,0.058,52,0.97,53,0.912,54,1.478,55,3.025,61,1.671,63,0.011,64,0.011,101,1.478,113,3.415,122,2.251,123,1.616,124,1.616,125,2.251,126,1.478,127,1.478,128,0.912,129,2.251,145,1.478,202,2.032,228,4.484,241,1.309,256,2.251,295,2.811,369,3.333,377,1.794,389,2.429,390,1.794,392,1.616,393,2.461,395,2.461,398,1.178,399,1.616,402,1.178,411,1.616,412,1.616,474,1.925,477,1.362,478,1.789,479,2.725,483,1.362,485,1.789,486,2.725,488,1.789,491,1.362,494,1.789,498,1.789,499,1.789,501,1.789,502,1.789,503,1.789,513,1.616,515,3.779,539,2.461,540,2.021,541,2.372,542,2.372,543,2.021,544,3.614,545,3.614,546,2.372,547,2.372,548,3.048,549,2.372,550,2.725,551,2.021,552,2.514,553,2.021,554,2.372,555,2.372,556,2.372,557,2.372,558,2.372,559,2.372,560,2.372]],["title/modules/TableModule.html",[65,1.216,76,2.218]],["body/modules/TableModule.html",[2,1.905,3,0.328,4,0.296,5,0.296,13,0.022,42,0.69,43,0.861,50,0.328,51,0.098,63,0.016,64,0.016,65,1.796,67,1.752,68,2.288,74,2.875,76,4.251,78,2.611,79,1.999,80,1.999,82,2.802,83,3.021,128,1.548,154,2.508,157,2.508,159,2.508,160,2.508,161,1.999,539,3.989,552,3.795,553,3.43,561,3.43,562,4.027,563,3.43,564,4.027,565,4.027]],["title/injectables/TableService.html",[91,1.021,552,2.045]],["body/injectables/TableService.html",[3,0.193,4,0.174,5,0.174,7,0.345,8,1.234,13,0.023,19,1.024,29,1.264,32,1.787,33,1.337,34,0.806,35,1.417,39,1.894,40,1.543,42,0.594,43,0.507,50,0.193,51,0.058,52,0.97,53,0.912,57,2.173,61,1.798,63,0.011,64,0.011,91,1.036,92,1.101,113,3.569,117,1.264,169,3.413,170,1.362,171,1.362,172,2,175,1.794,179,1.362,188,2.607,190,1.478,191,1.264,202,1.677,241,1.309,256,2.206,295,2.811,358,1.616,377,1.794,389,2.429,390,1.794,398,1.794,402,1.178,426,1.362,427,1.362,428,1.616,429,3.333,440,1.616,474,1.925,477,2.075,483,2.075,491,1.362,511,2.725,513,2.461,515,3.779,518,2.725,522,1.789,525,3.3,527,1.789,528,1.789,529,3.3,531,1.789,548,3.048,550,2.725,551,2.021,552,2.075,566,2.021,567,2.372,568,2.372,569,2.372,570,2.372,571,2.372,572,2.372,573,2.372,574,2.372,575,2.372,576,2.372,577,2.372,578,2.372]],["title/classes/UpdateProductDto.html",[51,0.087,484,2.218]],["body/classes/UpdateProductDto.html",[3,0.408,4,0.368,5,0.368,13,0.022,42,0.646,46,1.522,50,0.408,51,0.122,63,0.019,64,0.019,205,1.613,241,1.814,243,3.412,246,3.412,267,2.877,349,3.12,484,3.757,579,4.266,580,3.777,581,5.009]],["title/classes/UpdateTableDto.html",[51,0.087,548,2.218]],["body/classes/UpdateTableDto.html",[3,0.406,4,0.366,5,0.366,13,0.022,42,0.644,50,0.406,51,0.121,63,0.019,64,0.019,205,1.606,241,1.806,295,2.863,297,3.759,349,3.105,548,3.746,550,3.759,580,3.759,582,4.247,583,4.247,584,4.247,585,4.986]],["title/classes/UpdateUserDto.html",[51,0.087,586,2.218]],["body/classes/UpdateUserDto.html",[3,0.408,4,0.368,5,0.368,13,0.022,42,0.646,46,1.522,50,0.408,51,0.122,63,0.019,64,0.019,205,1.613,241,1.814,300,2.877,302,3.777,349,3.12,580,3.777,586,3.757,587,4.266,588,3.777,589,5.009]],["title/classes/User.html",[51,0.087,115,1.29]],["body/classes/User.html",[3,0.32,4,0.288,5,0.288,7,0.57,13,0.022,19,1.187,33,1.393,34,0.971,35,1.675,40,1.67,50,0.32,51,0.095,63,0.016,64,0.016,115,1.872,181,3.081,182,3.321,205,1.264,208,1.765,256,2.094,269,3.081,376,3.602,378,3.602,379,4.186,590,3.342,591,3.924,592,3.924,593,3.924,594,3.924,595,3.924,596,3.924,597,3.924]],["title/controllers/UserController.html",[0,1.29,598,2.425]],["body/controllers/UserController.html",[0,0.861,2,0.861,3,0.194,4,0.175,5,0.175,7,0.345,8,1.236,12,1.909,13,0.022,14,1.481,19,0.936,26,3.706,32,1.578,33,1.18,34,0.711,35,1.251,39,1.8,40,1.468,42,0.595,43,0.508,44,3.19,45,1.366,46,0.723,50,0.194,51,0.058,52,0.972,53,0.914,54,1.481,55,3.028,61,1.673,63,0.011,64,0.011,101,1.481,115,0.861,118,3.418,122,2.254,123,1.619,124,1.619,125,2.254,126,1.481,127,1.481,128,0.914,129,3.283,145,3.051,202,2.034,215,2.465,216,2.465,241,1.311,256,2.208,300,3.19,389,2.432,390,1.797,392,1.619,393,2.465,395,3.337,398,1.18,399,1.619,402,1.18,411,1.619,412,1.619,474,1.928,477,1.366,478,1.793,479,2.729,483,1.366,485,1.793,486,2.729,488,1.793,491,1.366,494,1.793,498,1.793,499,1.793,501,1.793,502,1.793,503,1.793,543,2.025,586,3.706,588,2.729,598,2.465,599,2.025,600,2.378,601,2.378,602,5.554,603,4.383,604,2.378,605,2.378,606,2.378,607,2.378,608,2.378,609,2.517,610,2.025,611,2.378,612,2.378,613,2.378,614,2.378,615,2.378,616,2.378,617,2.378,618,2.378]],["title/modules/UserModule.html",[65,1.216,77,2.218]],["body/modules/UserModule.html",[2,1.905,3,0.328,4,0.296,5,0.296,13,0.022,42,0.69,43,0.861,50,0.328,51,0.098,63,0.016,64,0.016,65,1.796,67,1.752,68,2.288,74,2.875,77,4.251,78,2.611,79,1.999,80,1.999,82,2.802,83,3.021,128,1.548,154,2.508,157,2.508,159,2.508,160,2.508,161,1.999,598,3.989,609,3.795,610,3.43,619,3.43,620,4.027,621,3.43,622,4.027,623,4.027]],["title/injectables/UserService.html",[91,1.021,609,2.045]],["body/injectables/UserService.html",[3,0.154,4,0.139,5,0.139,7,0.275,8,1.036,13,0.023,19,0.979,29,1.01,32,1.628,33,1.328,34,0.771,35,1.291,39,1.726,40,1.461,42,0.568,43,0.406,50,0.154,51,0.046,52,0.775,53,0.729,57,1.882,61,1.618,63,0.009,64,0.009,91,0.87,92,0.88,113,3.349,115,1.099,117,1.01,169,3.365,170,1.089,171,1.089,172,1.771,175,1.506,178,2.287,179,1.089,180,3.229,181,1.616,182,2.178,188,2.693,189,1.43,190,2.361,191,2.02,202,2.011,208,1.036,241,1.373,245,4.573,256,2.157,269,1.616,300,2.488,355,2.584,358,2.582,376,1.889,378,1.889,389,2.151,390,1.506,398,1.506,402,0.941,426,1.089,427,1.089,428,1.292,429,2.951,439,3.69,440,1.292,474,1.616,477,1.742,483,1.742,491,1.089,511,2.287,513,2.066,515,3.442,518,2.287,522,1.43,525,2.859,527,1.43,528,1.43,529,2.859,531,1.43,586,2.699,588,2.287,609,1.742,624,1.615,625,3.792,626,1.896,627,1.896,628,1.896,629,1.896,630,1.896,631,1.896,632,1.896,633,1.896,634,1.615,635,1.615,636,1.896,637,1.896,638,1.896,639,1.896,640,4.333,641,3.792,642,4.333,643,3.034,644,3.034,645,3.034,646,3.034,647,3.034,648,1.896,649,2.584,650,1.896,651,3.034,652,1.896,653,1.896,654,1.896]],["title/changelog.html",[655,2.03,656,2.03,657,2.981]],["body/changelog.html",[13,0.02,63,0.02,64,0.02]],["title/contributing.html",[655,2.03,656,2.03,658,2.981]],["body/contributing.html",[13,0.02,63,0.02,64,0.02]],["title/coverage.html",[659,3.654]],["body/coverage.html",[0,2.009,1,1.616,5,0.174,6,2.021,13,0.022,34,0.345,47,1.362,51,0.159,63,0.011,64,0.011,91,1.706,93,2.021,99,1.616,100,2.021,106,1.478,115,1.309,131,1.362,133,1.478,137,1.616,151,1.478,168,2.021,172,0.97,175,1.178,191,1.264,204,1.478,206,2.725,207,2.021,209,1.478,211,1.616,242,2.075,246,2.981,267,1.362,268,2.021,295,1.362,296,2.021,297,2.725,300,1.362,301,2.021,302,2.725,337,2.021,360,2.021,365,2.021,366,2.021,375,2.021,377,2.173,382,1.794,387,1.616,388,2.021,401,1.789,404,1.362,419,2.021,426,1.362,427,1.362,451,2.021,464,2.021,472,1.616,473,2.021,484,1.478,489,1.362,510,2.021,534,2.021,539,1.616,540,2.021,548,1.478,552,1.362,566,2.021,579,2.021,582,2.021,586,1.478,587,2.021,590,2.021,598,1.616,599,2.021,609,1.362,624,2.021,659,1.789,660,2.372,661,2.372,662,2.372,663,2.372,664,2.372,665,7.165,666,3.614,667,5.77,668,2.021,669,6.093,670,6.551,671,2.021,672,3.614,673,2.021,674,3.614,675,2.372,676,4.377,677,3.078,678,2.021,679,3.078,680,3.078,681,2.021,682,3.078,683,3.078,684,3.078,685,3.078,686,2.021,687,4.894,688,4.894,689,2.372,690,2.021,691,2.372]],["title/dependencies.html",[68,1.862,692,2.539]],["body/dependencies.html",[13,0.023,38,4.581,43,0.891,46,1.267,51,0.131,63,0.017,64,0.017,68,1.814,128,1.603,156,3.143,161,2.069,178,3.143,235,3.55,240,2.221,348,5.072,374,2.596,583,3.55,584,3.55,693,5.955,694,4.169,695,5.379,696,4.169,697,4.169,698,4.169,699,5.379,700,4.169,701,4.169,702,4.169,703,4.169,704,4.169,705,4.169,706,4.169,707,4.169,708,4.169,709,4.169,710,4.169,711,4.169,712,4.169,713,4.169,714,4.169,715,4.169,716,4.169,717,4.169]],["title/miscellaneous/functions.html",[718,2.03,719,3.645]],["body/miscellaneous/functions.html",[7,0.731,13,0.02,32,1.621,33,1.212,34,0.731,35,1.285,63,0.019,64,0.019,426,3.474,427,2.89,671,4.287,673,5.523,690,5.152,718,3.428,719,4.287,720,5.033,721,5.033,722,5.033,723,6.485]],["title/index.html",[7,0.433,655,2.03,656,2.03]],["body/index.html",[4,0.279,13,0.022,36,1.375,63,0.016,64,0.016,96,3.235,458,3.235,659,2.864,724,3.798,725,3.798,726,5.06,727,3.798,728,3.798,729,3.798,730,3.798,731,3.798,732,5.69,733,3.798,734,3.798,735,3.798,736,3.798,737,6.635,738,3.798,739,3.798,740,6.5,741,3.798,742,3.798,743,5.06,744,3.798,745,3.798,746,3.798,747,3.798,748,5.06,749,5.06,750,3.798,751,3.798,752,3.798,753,5.06,754,5.06,755,3.798,756,3.798,757,3.798,758,3.798,759,3.798,760,3.235,761,3.798,762,3.798,763,3.798,764,3.798,765,3.798,766,3.798,767,3.798,768,3.798,769,3.798,770,3.798,771,3.235,772,3.798,773,3.798,774,3.798,775,3.798,776,3.798,777,3.798,778,3.235]],["title/modules.html",[67,2.108]],["body/modules.html",[13,0.018,63,0.018,64,0.018,66,3.23,67,2.063,72,2.954,73,2.954,74,2.063,75,2.954,76,2.954,77,2.954,760,5.946,779,6.982,780,6.982,781,6.982]],["title/overview.html",[782,4.127]],["body/overview.html",[2,1.164,13,0.022,47,2.997,63,0.014,64,0.014,66,4.758,67,1.399,68,1.964,69,2.738,70,2.738,71,2.738,72,4.101,73,3.953,74,2.935,75,3.953,76,3.953,77,3.953,78,2.241,79,1.596,80,1.596,92,1.492,131,2.997,148,2.738,150,2.738,151,3.25,172,2.594,205,1.035,404,2.997,414,2.738,415,2.738,445,2.738,446,2.738,447,2.738,489,2.997,505,2.738,507,2.738,552,2.997,561,2.738,563,2.738,609,2.997,619,2.738,621,2.738,782,2.738,783,3.215,784,3.215,785,3.215,786,3.215]],["title/properties.html",[208,1.461,692,2.539]],["body/properties.html",[13,0.022,36,1.932,63,0.019,64,0.019,208,1.821,771,4.543,778,4.543,787,5.335,788,5.335,789,5.335]],["title/todo.html",[655,2.03,656,2.03,790,2.981]],["body/todo.html",[13,0.02,63,0.02,64,0.02]],["title/miscellaneous/variables.html",[718,2.03,791,3.645]],["body/miscellaneous/variables.html",[7,0.338,11,1.981,13,0.023,24,2.945,28,2.483,29,2.581,33,1.257,34,0.628,36,1.566,57,2.592,61,0.794,63,0.011,64,0.011,115,1.754,137,2.424,169,2.304,175,2.592,181,1.896,182,2.044,188,2.581,191,1.239,201,1.754,202,1.08,209,2.217,225,2.405,232,1.584,241,1.566,269,2.581,270,2.945,272,3.682,273,4.125,274,4.689,275,3.682,276,3.682,277,3.682,278,3.682,279,4.125,282,3.682,285,3.682,289,3.682,294,1.981,309,1.754,312,1.981,317,1.981,318,1.981,322,1.754,377,1.767,382,1.767,401,1.754,452,4.125,474,2.304,634,5.16,635,5.16,649,1.981,668,3.032,677,1.981,678,3.032,679,1.981,680,3.682,681,3.032,682,1.981,683,3.682,684,1.981,685,3.682,686,3.032,718,1.584,791,1.981,792,2.326,793,3.559,794,3.559,795,3.559,796,3.559,797,2.326,798,2.326,799,2.326,800,2.326,801,2.326,802,2.326,803,5.506,804,2.326,805,2.326,806,2.326,807,2.326,808,2.326,809,2.326,810,2.326,811,2.326,812,2.326,813,2.326,814,2.326,815,2.326,816,2.326,817,2.326,818,2.326,819,2.326]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":788,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["1/2",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":649,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["12.34",{"_index":289,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":786,"title":{},"body":{"overview.html":{}}}],["2",{"_index":294,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["24h",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["2})@apiproperty({description",{"_index":287,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["3",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["4779",{"_index":259,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["5.0.0",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":784,"title":{},"body":{"overview.html":{}}}],["7",{"_index":783,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":785,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["8e2bb7ca",{"_index":257,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["9.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["9987",{"_index":258,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["_count",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{}}}],["a69f300f2629",{"_index":261,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["a85b",{"_index":260,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["abcd@1234",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":761,"title":{},"body":{"index.html":{}}}],["apenas",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["api",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":367,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":554,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":611,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":731,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":66,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":47,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["autenticado",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":99,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":72,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":771,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":762,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":637,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":643,"title":{},"body":{"injectables/UserService.html":{}}}],["barbosa",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["baseurl",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["bcrypt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["borda",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":781,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":779,"title":{},"body":{"modules.html":{}}}],["building",{"_index":727,"title":{},"body":{"index.html":{}}}],["calabresa",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch(handleerror",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catupiry",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["cebola",{"_index":253,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["changelog",{"_index":657,"title":{"changelog.html":{}},"body":{}}],["checa",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":51,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":416,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":445,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":447,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":446,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":505,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":506,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":507,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":561,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":562,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":563,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":619,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":620,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":621,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["confirmação",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["connect",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{}}}],["const",{"_index":57,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["contributing",{"_index":658,"title":{"contributing.html":{}},"body":{}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":555,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":612,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["correta",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":659,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":241,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":475,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":600,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":513,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":376,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":204,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderdto.products.map((createorderproductdto",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto.tablenumber",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto",{"_index":211,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createorderproductdto.description",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.productid",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderproductdto.quantity",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["createparamdecorator((_",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":267,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":295,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":300,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{}}}],["dados",{"_index":372,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["data",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":379,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":634,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["deve",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":739,"title":{},"body":{"index.html":{}}}],["docs",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["documentation",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["dos",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["dto",{"_index":515,"title":{},"body":{"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":642,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.password",{"_index":641,"title":{},"body":{"injectables/UserService.html":{}}}],["dto/create",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["e/ou",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":750,"title":{},"body":{"index.html":{}}}],["each",{"_index":244,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["editar",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["efficient",{"_index":728,"title":{},"body":{"index.html":{}}}],["enableshutdownhooks",{"_index":453,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":455,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["entities/product.entity",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{}}}],["entities/user.entity",{"_index":638,"title":{},"body":{"injectables/UserService.html":{}}}],["entity/table.entity",{"_index":551,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["error",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error.util",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["est",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/JwtStrategy.html":{}}}],["estão",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["example",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exibição",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["existe",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":449,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcj9.eyjuawnrbmftzsi6im1hcmnvc2jhcmjvc2eilcjpyxqioje2ntgynduxmdysimv4cci6mty1odmzmtuwnn0.qg6kykrrlzpirfam9vzozj9qufo4fpnqna7uuuqv61s",{"_index":370,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["false",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["fina",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":511,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":518,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["fino",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["fraca",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":329,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":726,"title":{},"body":{"index.html":{}}}],["frango",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":672,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":719,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":368,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":655,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["grow",{"_index":757,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":722,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":768,"title":{},"body":{"index.html":{}}}],["httpcode",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://i.imgur.com/hne75iw.png",{"_index":282,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["https://i.pinimg.com/736x/53/06/ce/5306ce49b18bcc4013e97720d1764b88.jpg",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":775,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":256,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id'})@useguards(undefined)@apibearerauth",{"_index":603,"title":{},"body":{"controllers/UserController.html":{}}}],["identifier",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["ignoreexpiration",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iguais",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["igual",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["imagem",{"_index":281,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":460,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informada",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["informadas",{"_index":645,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":91,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":736,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":738,"title":{},"body":{"index.html":{}}}],["inválidos",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["ishashvalid",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isint()@ispositive()@apiproperty({description",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":364,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":291,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isnumber()@ispositive()@apiproperty({description",{"_index":298,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":286,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":331,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isoptional()@apiproperty({description",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":266,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":361,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":324,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":292,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isurl()@apiproperty({description",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":255,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["itens",{"_index":264,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["join",{"_index":764,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":151,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":772,"title":{},"body":{"index.html":{}}}],["license",{"_index":778,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":754,"title":{},"body":{"index.html":{}}}],["lista",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["listar",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["logged",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":106,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":133,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["marcos",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["marcosbarbosa",{"_index":322,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["massa",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["matches",{"_index":332,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxdecimalplaces",{"_index":293,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["mesa",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesas",{"_index":545,"title":{},"body":{"controllers/TableController.html":{}}}],["message",{"_index":327,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["metadata",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":333,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":718,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":753,"title":{},"body":{"index.html":{}}}],["mode",{"_index":743,"title":{},"body":{"index.html":{}}}],["module",{"_index":65,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":67,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":767,"title":{},"body":{"index.html":{}}}],["muito",{"_index":328,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mussarela",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":773,"title":{},"body":{"index.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":732,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":777,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":583,"title":{},"body":{"classes/UpdateTableDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nickname",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["nico",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["node.js",{"_index":725,"title":{},"body":{"index.html":{}}}],["nome",{"_index":284,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["npm",{"_index":737,"title":{},"body":{"index.html":{}}}],["number",{"_index":225,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["não",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["obj",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.name",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.nickname",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.number",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":633,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(products",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(tables",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["observações",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["onmoduleinit",{"_index":454,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":755,"title":{},"body":{"index.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":242,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":418,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:13",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:23",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":387,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":73,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":404,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":782,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":692,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["param",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":580,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":581,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":585,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":589,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":485,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"controllers/OrderController.html":{}}}],["pedidos",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{}}}],["pelo",{"_index":369,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["perfil",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["pizza",{"_index":285,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["please",{"_index":765,"title":{},"body":{"index.html":{}}}],["por",{"_index":602,"title":{},"body":{"controllers/UserController.html":{}}}],["post",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["preço",{"_index":288,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.ordercreateinput",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.product.upsert",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.productcreateinput",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.service",{"_index":450,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.table.upsert",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.tablecreateinput",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.user.upsert",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":374,"title":{},"body":{"classes/LoginResponseDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":452,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":74,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":172,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procura",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["product",{"_index":382,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":509,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":243,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":262,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":265,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":254,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:27",{"_index":290,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":283,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["product/product.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":472,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["production",{"_index":745,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":75,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":489,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":251,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produtos",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{}}}],["profile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":724,"title":{},"body":{"index.html":{}}}],["project",{"_index":756,"title":{},"body":{"index.html":{}}}],["promise",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["quantidade",{"_index":263,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["queijo",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":766,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizando",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["realizar",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["recheada",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{},"miscellaneous/variables.html":{}}}],["record",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["remover",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["repository",{"_index":735,"title":{},"body":{"index.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":366,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":373,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":371,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["results",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":740,"title":{},"body":{"index.html":{}}}],["running",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":729,"title":{},"body":{"index.html":{}}}],["se",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["secret",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeds",{"_index":678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":252,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["senha",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":644,"title":{},"body":{"injectables/UserService.html":{}}}],["ser",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["server",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["side",{"_index":730,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sponsors",{"_index":759,"title":{},"body":{"index.html":{}}}],["src/.../01",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":95,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:20",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":365,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":360,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":362,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":363,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":671,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":375,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:4",{"_index":381,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:5",{"_index":386,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":384,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":380,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":385,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":383,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:20",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:28",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:36",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":417,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:11",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:65",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:88",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":448,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":451,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":677,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/dto/create",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":579,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts",{"_index":464,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":467,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":469,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":466,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":470,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":468,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":465,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":471,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:19",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:27",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:35",{"_index":482,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:43",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":508,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":510,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":512,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:15",{"_index":517,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:19",{"_index":519,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:29",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:33",{"_index":514,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:39",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":516,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":296,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":582,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entity/table.entity.ts",{"_index":534,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entity/table.entity.ts:2",{"_index":536,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entity/table.entity.ts:3",{"_index":537,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entity/table.entity.ts:4",{"_index":535,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entity/table.entity.ts:5",{"_index":538,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":540,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":546,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:39",{"_index":547,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:47",{"_index":541,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:55",{"_index":549,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:64",{"_index":542,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":564,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":566,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":567,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:15",{"_index":570,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:19",{"_index":571,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:29",{"_index":572,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:33",{"_index":568,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:39",{"_index":573,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:49",{"_index":569,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":587,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":590,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":592,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":594,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":593,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":591,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":597,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":599,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:28",{"_index":601,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:38",{"_index":606,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:48",{"_index":607,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:58",{"_index":608,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:69",{"_index":604,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":622,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":624,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":636,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":626,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:27",{"_index":629,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":630,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:46",{"_index":631,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:50",{"_index":627,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:67",{"_index":632,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:91",{"_index":628,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":741,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":744,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":746,"title":{},"body":{"index.html":{}}}],["started",{"_index":656,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":734,"title":{},"body":{"index.html":{}}}],["statements",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":769,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":760,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":780,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["são",{"_index":646,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":377,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table.controller",{"_index":565,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":550,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":297,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:11",{"_index":299,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":553,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["table/table.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":539,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":76,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tables",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tableservice",{"_index":552,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":749,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":752,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":751,"title":{},"body":{"index.html":{}}}],["tests",{"_index":748,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":758,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":461,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":462,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":62,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":413,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product.create",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.update",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table.create",{"_index":576,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":578,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":574,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":575,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.update",{"_index":577,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":639,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(dto",{"_index":558,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":556,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":557,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":559,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":640,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":613,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":618,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":615,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":616,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":617,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["todas",{"_index":544,"title":{},"body":{"controllers/TableController.html":{}}}],["todo",{"_index":790,"title":{"todo.html":{}},"body":{}}],["todos",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["touch",{"_index":770,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["true",{"_index":245,"title":{},"body":{"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":776,"title":{},"body":{"index.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":584,"title":{},"body":{"classes/UpdateTableDto.html":{},"dependencies.html":{}}}],["types/bcrypt",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":733,"title":{},"body":{"index.html":{}}}],["ui",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TableController.html":{}}}],["unauthorizedexception",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["unit",{"_index":747,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":789,"title":{},"body":{"properties.html":{}}}],["update",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":378,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":484,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":548,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":586,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["usando",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["useguards",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":115,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":623,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":588,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":323,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":330,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":610,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.ts",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user/user.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":598,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":77,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userselect",{"_index":625,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":609,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":614,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@useguards(undefined)@apibearerauth",{"_index":605,"title":{},"body":{"controllers/UserController.html":{}}}],["utilizado",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["valida",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":240,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":635,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":791,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":787,"title":{},"body":{"properties.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["void",{"_index":543,"title":{},"body":{"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":742,"title":{},"body":{"index.html":{}}}],["website",{"_index":774,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":763,"title":{},"body":{"index.html":{}}}],["z",{"_index":326,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":325,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n                    Recebe uma requisição Get e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        : string, docs: string} Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { AppService } from './app.service';\n\n@Controller()\n@ApiTags('status')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Recebe uma requisição Get e retorna um objeto de status\n   * da aplicação com a URL de documentação\n   * @param req Objeto de Request do Express\n   * @returns {status: string, docs: string} Objeto de status da aplicação\n   */\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar status da aplicação',\n  })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { ProductModule } from './product/product.module';\nimport { UserModule } from './user/user.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, ProductModule, UserModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status:\n        'Server is running! 🚀',\n      docs: baseUrl + '/api'\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, HttpCode, HttpStatus, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@Controller('auth')\n@ApiTags('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: \"Retorna o usuário autenticado no momento\"\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { nickname, password } = loginDto;\n\n    // Procura e checa se o user existe, usando o nickname\n    const user = await this.prisma.user.findUnique({ where: { nickname } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    // Valida se a senha informada é correta\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ nickname }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista com todos os IDs dos produtos que estão no pedido', type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Número da mesa que está realizando o pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, IsPositive, IsUUID, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Número da mesa que está realizando o pedido',\n    example: 1,\n  })\n  tableNumber: number;\n\n  @ValidateNested({\n    each: true,\n  })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista com todos os IDs dos produtos que estão no pedido',\n    type: [CreateOrderProductDto],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Observações do produto', example: 'Sem cebola'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'ID do produto', example: '8e2bb7ca-9987-4779-a85b-a69f300f2629'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@IsPositive()@ApiProperty({description: 'Quantidade de itens no pedido', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsInt, IsPositive, IsString, IsUUID } from \"class-validator\";\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'ID do produto',\n    example: '8e2bb7ca-9987-4779-a85b-a69f300f2629'\n  })\n  productId: string\n\n  @IsInt()\n  @IsPositive()\n  @ApiProperty({\n    description: 'Quantidade de itens no pedido',\n    example: 1\n  })\n  quantity: number\n\n  @IsString()\n  @ApiProperty({\n    description: 'Observações do produto',\n    example: 'Sem cebola'\n  })\n  description: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Descrição do produto', example: 'Queijo mussarela fino do fino, massa fina e borda recheada com catupiry'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem do produto', example: 'https://i.imgur.com/hNE75Iw.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do produto', example: 'Pizza de Mussarela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber({maxDecimalPlaces: 2})@ApiProperty({description: 'Preço do produto', example: 12.34})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Pizza de Mussarela',\n  })\n  name: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Descrição do produto',\n    example:\n      'Queijo mussarela fino do fino, massa fina e borda recheada com catupiry',\n  })\n  description: string;\n\n  @IsNumber({\n    maxDecimalPlaces: 2,\n  })\n  @ApiProperty({\n    description: 'Preço do produto',\n    example: 12.34,\n  })\n  price: number;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem do produto',\n    example: 'https://i.imgur.com/hNE75Iw.png',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsPositive()@ApiProperty({description: 'O número da mesa', example: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\n\nexport class CreateTableDto {\n  @IsNumber()\n  @IsPositive()\n  @ApiProperty({\n    description: 'O número da mesa',\n    example: 1,\n  })\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiProperty({description: 'Confirmação da senha. Deve ser igual a senha', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUrl()@ApiProperty({description: 'Imagem de perfil do usuário.', example: 'https://i.pinimg.com/736x/53/06/ce/5306ce49b18bcc4013e97720d1764b88.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome do usuário. Apenas para exibição', example: 'Marcos Barbosa'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Nome de usuário. Utilizado no login. Deve ser único', example: 'marcosbarbosa'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca'})@ApiProperty({description: 'Senha do usuário para login.', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsString, IsUrl, Matches, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Nome de usuário. Utilizado no login. Deve ser único',\n    example: 'marcosbarbosa',\n  })\n  nickname: string;\n\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário. Apenas para exibição',\n    example: 'Marcos Barbosa',\n  })\n  name: string;\n\n  @IsString()\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca',\n  })\n  @ApiProperty({\n    description: 'Senha do usuário para login.',\n    example: 'Abcd@1234',\n  })\n  password: string;\n\n  @IsOptional()\n  @ApiProperty({\n    description: 'Confirmação da senha. Deve ser igual a senha',\n    example: 'Abcd@1234',\n  })\n  confirmPassword: string;\n\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de perfil do usuário.',\n    example:\n      'https://i.pinimg.com/736x/53/06/ce/5306ce49b18bcc4013e97720d1764b88.jpg',\n  })\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nickname do usuário', example: 'marcosbarbosa'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Abcd@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nickname do usuário',\n    example: 'marcosbarbosa',\n  })\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Abcd@1234',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: '\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6Im1hcmNvc2JhcmJvc2EiLCJpYXQiOjE2NTgyNDUxMDYsImV4cCI6MTY1ODMzMTUwNn0.qG6kykrrlzPIrfam9vZOZJ9QufO4Fpnqna7UUUqv61s'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from '@prisma/client';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: '\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuaWNrbmFtZSI6Im1hcmNvc2JhcmJvc2EiLCJpYXQiOjE2NTgyNDUxMDYsImV4cCI6MTY1ODMzMTUwNn0.qG6kykrrlzPIrfam9vZOZJ9QufO4Fpnqna7UUUqv61s',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product, Table, User } from '@prisma/client';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  createdAt?: Date;\n  updatedAt?: Date;\n  products?: Product[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um pedido'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os pedidos'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um pedido pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um pedido'\n  })\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os pedidos'\n  })\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um pedido pelo ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { OrderController } from './order.controller';\nimport { OrderService } from './order.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' }),],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(userId: string, createOrderDto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      table: {\n        connect: {\n          number: createOrderDto.tableNumber,\n        },\n      },\n      products: {\n        createMany: {\n          data: createOrderDto.products.map((createOrderProductDto) => ({\n            productId: createOrderProductDto.productId,\n            quantity: createOrderProductDto.quantity,\n            description: createOrderProductDto.description,\n          })),\n        },\n      },\n    };\n\n    return this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          user: {\n            select: {\n              name: true,\n            },\n          },\n          products: {\n            select: {\n              quantity: true,\n              description: true,\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            name: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: {\n              select: {\n                id: true,\n                name: true,\n                price: true,\n                image: true,\n                description: true,\n              },\n            },\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string\n  name: string\n  description: string\n  price: number\n  image: string\n  createdAt?: Date\n  updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um produto pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProductDto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um produto'\n  })\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos'\n  })\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar um produto pelo ID'\n  })\n  findOne(@Param('id') id: string) {\n    return this.productService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um produto pelo ID'\n  })\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um produto pelo ID'\n  })\n  delete(@Param('id') id: string) {\n    return this.productService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' }),],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateProductDto): Promise {\n    const data: Product = { ...dto };\n\n    return this.prisma.product.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateProductDto): Promise {\n    await this.findById(id);\n    const data: Partial = { ...dto };\n\n    return this.prisma.product.update({\n      where: { id },\n      data,\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.product.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entity/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entity/table.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entity/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entity/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entity/table.entity.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as mesas'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma mesa'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar uma mesa pelo ID'})\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entity/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as mesas',\n  })\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma mesa',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar uma mesa',\n  })\n  create(@Body() dto: CreateTableDto): Promise {\n    return this.tableService.create(dto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar uma mesa pelo ID',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover uma mesa pelo ID',\n  })\n  delete(@Param('id') id: string) {\n    this.tableService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' }),],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entity/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n\n    return this.prisma.table.create({ data }).catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateTableDto): Promise {\n    await this.findById(id);\n    const data: Partial = { ...dto };\n\n    return this.prisma.table.update({\n      where: { id },\n      data,\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.table.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateTableDto } from './create-table.dto';\n\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Remover um usuário por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os usuários'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Listar um usuário por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar um usuário por ID'})@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpCode,\n  HttpStatus,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar um usuário',\n  })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os usuários',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Listar um usuário por ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar um usuário por ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({\n    summary: 'Remover um usuário por ID',\n  })\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' }),],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException\n} from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: this.userSelect,\n    });\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o ID '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async findOne(id: string): Promise {\n    return this.findById(id);\n  }\n\n  async create(dto: CreateUserDto): Promise {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: User = {\n      ...dto,\n      password: await bcrypt.hash(dto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({ data, select: this.userSelect })\n      .catch(handleError);\n  }\n\n  async update(id: string, dto: UpdateUserDto): Promise {\n    await this.findById(id);\n\n    if (dto.password) {\n      if (dto.password != dto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Partial = { ...dto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user.update({\n      where: { id },\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-product.ts\n            \n            variable\n            products\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            table\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-table.ts\n            \n            variable\n            tables\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entity/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^4.0.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            product   (src/.../02-product.ts)\n                        \n                        \n                            products   (src/.../02-product.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            table   (src/.../03-table.ts)\n                        \n                        \n                            tables   (src/.../03-table.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/02-product.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(products)) {\n    await prisma.product.upsert({\n      where: {name: obj.name},\n      update: {},\n      create: {\n        ...obj,\n\n      },\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.ProductCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Pizza de Mussarela',\n    description: 'Queijo mussarela fino do fino, massa fina e borda recheada com catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png'\n  },\n  {\n    name: 'Pizza de Calabresa',\n    description: 'Queijo mussarela fino do fino, massa fina e borda recheada com catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png'\n  },\n  {\n    name: 'Pizza de Frango com Catupiry',\n    description: 'Queijo mussarela fino do fino, massa fina e borda recheada com catupiry',\n    price: 12.34,\n    image: 'https://i.imgur.com/hNE75Iw.png'\n  }\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-table.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(tables)) {\n    await prisma.table.upsert({\n      where: {number: obj.number},\n      update: {},\n      create: {\n        ...obj,\n\n      },\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tables\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.TableCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    number: 1,\n  },\n  {\n    number: 2,\n  },\n  {\n    number: 3,\n  }\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: {nickname: obj.nickname},\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10)\n      },\n    })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    nickname: 'marcosbarbosa',\n    name: 'Marcos Barbosa',\n    password: 'Abcd@1234',\n    image: 'https://i.pinimg.com/736x/53/06/ce/5306ce49b18bcc4013e97720d1764b88.jpg'\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
